var admin = require('firebase-admin');

// private key generated by firebase app
var serviceAccount = require('../config/fbServiceAccountKey.json');

admin.initializeApp({
	credential: admin.credential.cert(serviceAccount),
});

exports.authCheck = async (req) => {
	// checking if token is there in headers and then verifyIdToken using firebase auth() methods
	// middleware for GraphQL
	try {
		const currentUser = await admin
			.auth()
			.verifyIdToken(req.headers.authtoken);

		return currentUser;
	} catch (error) {
		console.log('Auth Check error', error.message);
		throw new Error('Invalid or Expired Token');
	}
};

exports.authCheckMiddleware = (req, res, next) => {
	// middleware for cloudinary in Rest endpoint
	if (req.headers.authtoken) {
		admin
			.auth()
			.verifyIdToken(req.headers.authtoken)
			.then(() => {
				next();
			})
			.catch((error) => console.log(error));
	} else {
		res.json({ error: 'Unauthorized' });
	}
};
